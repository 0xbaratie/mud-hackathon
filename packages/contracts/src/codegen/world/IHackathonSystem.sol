// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { SubmissionData } from "./../Tables.sol";

interface IHackathonSystem {
  function getMaxHackathonId() external view returns (bytes32);

  function getSubmission(bytes32 _hackathonId, address _submitter) external view returns (SubmissionData memory);

  function createHackathon(
    address _prizeToken,
    uint256 _startTimestamp,
    uint256 _submitPeriod,
    uint256 _votingPeriod,
    uint256 _withdrawalPeriod,
    uint8 _winnerCount,
    string memory _name,
    string memory _uri,
    string memory _imageUri
  ) external;

  function updateHackathon(
    bytes32 _hackathonId,
    address _prizeToken,
    uint256 _startTimestamp,
    uint256 _submitPeriod,
    uint256 _votingPeriod,
    uint256 _withdrawalPeriod,
    uint8 _winnerCount,
    string memory _name,
    string memory _uri,
    string memory _imageUri
  ) external;

  function proceedPhase(bytes32 _hackathonId) external;

  function withdrawByOwner(bytes32 _hackathonId) external;
}
